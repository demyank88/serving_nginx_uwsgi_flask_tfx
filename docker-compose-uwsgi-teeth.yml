version: "3.3"

services:
    tfsroot:
        image: tensorflow/serving:2.3.0-gpu
        container_name: tfsroot
        volumes:
            - /home/serving/:/models/
            - type: bind
              source: /home/serving/root
              target: /models/root
        ports:
            - "8502:8501"
        environment:
            - NVIDIA_VISIBLE_DEVICES=0
            - MODEL_NAME=root
        command:
            - '--model_config_file_poll_wait_seconds=60'
            - '--model_config_file=/models/models.config'
            - '--per_process_gpu_memory_fraction=0.15'
            - '--allow_growth=True'
        expose:
            - 8502
        networks:
            wireteeth:
              ipv4_address: 192.168.10.4


    tfstar:
        image: tensorflow/serving:2.3.0-gpu
        container_name: tfstar
        volumes:
            - /home/serving/:/models/
            - type: bind
              source: /home/serving/tar
              target: /models/tar
        ports:
            - "8503:8501"
        environment:
            - NVIDIA_VISIBLE_DEVICES=0
            - MODEL_NAME=tar
        command:
            - '--model_config_file_poll_wait_seconds=60'
            - '--model_config_file=/models/models.config'
            - '--per_process_gpu_memory_fraction=0.15'
            - '--allow_growth=True'
        expose:
            - 8503
        networks:
            wireteeth:
              ipv4_address: 192.168.10.5

    flaskteeth:
        image: flask:serving
        build: ./flaskteeth
        container_name: flaskteeth
        restart: always
        ports:
            - "5001:5001"
#            - "8501:8501"
#        command:
#            - /flask-api/wait-for-it.sh flask-api-mysql:3306 -- gunicorn -b 0.0.0.0:5000 -k gevent src.runner:app

        environment:
            - APP_NAME=FlaskTest2
#            - FLASK_API_SQLALCHEMY_DATABASE_URI=mysql+pymysql://root:toor@flask-api-mysql/flask-api-db
#        depends_on:
#            - tfserving
#        volumes:
#            - /docker/flask/config.prod.yaml:/www/src/config.yaml
#            - /docker/flask/xkm/clientCOnfig_for_prod.ini:/root/xecure/xkm/conf/clientConfig.ini
#            - /docker/flask/xkm/client_cert2_10.13.88.51.pfx:/root/xecure/xkm/XKM_Cert/client_cert2_10.13.88.51.pfx
#            - /docker/flask/xkm/client_cert2_10.13.88.51.pfx:/root/xecure/xkm/XKM_Cert/client_cert2_10.13.88.51.pfx
#            - /docker/fmsnas/images:/www/images
#            - /docker/fmsnas/10.13.88.51/logs:/www/logs
        expose:
            - 5001
        networks:
            wireteeth:
              ipv4_address: 192.168.10.6
#
#    nginxteeth:
#        image: nginx:0.0.1
#        build: ./nginxteeth
#        container_name: nginxteeth
#        restart: always
#        depends_on:
#            - flaskteeth
#        ports:
#            - "8081:8081"
#        #        depends_on:
#        #          - flask-api
#        expose:
#            - 8081
#        networks:
#            wireteeth:
#                ipv4_address: 192.168.10.7


networks:
  wireteeth:
      driver: bridge
      ipam:
          config:
              - subnet: 192.168.10.0/24
