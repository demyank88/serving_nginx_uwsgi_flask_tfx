version: "3.3"

services:
    tfserving:
        image: tensorflow/serving:2.3.0-gpu
        container_name: tfs
        volumes:
            - /home/serving/:/models/
            - type: bind
              source: /home/serving/eye
              target: /models/eye
        ports:
            - "8501:8501"
        environment:
            - NVIDIA_VISIBLE_DEVICES=0
            - MODEL_NAME=eye
        command:
            - '--model_config_file_poll_wait_seconds=60'
            - '--model_config_file=/models/models.config'
            - '--per_process_gpu_memory_fraction=0.20'
            - '--rest_api_port=8501'
            - '--enable_model_warmup=true'
        expose:
            - 8501
        networks:
            wire3:
              ipv4_address: 192.168.80.5

    flask:
        image: flask:serving
        build: ./flask
        container_name: flask
        restart: always
        ports:
            - "5000:5000"
#            - "8501:8501"
#        command:
#            - /flask-api/wait-for-it.sh flask-api-mysql:3306 -- gunicorn -b 0.0.0.0:5000 -k gevent src.runner:app

        environment:
            - APP_NAME=FlaskTest
#            - FLASK_API_SQLALCHEMY_DATABASE_URI=mysql+pymysql://root:toor@flask-api-mysql/flask-api-db
#        depends_on:
#            - tfserving
#        volumes:
#            - /docker/flask/config.prod.yaml:/www/src/config.yaml
#            - /docker/flask/xkm/clientCOnfig_for_prod.ini:/root/xecure/xkm/conf/clientConfig.ini
#            - /docker/flask/xkm/client_cert2_10.13.88.51.pfx:/root/xecure/xkm/XKM_Cert/client_cert2_10.13.88.51.pfx
#            - /docker/flask/xkm/client_cert2_10.13.88.51.pfx:/root/xecure/xkm/XKM_Cert/client_cert2_10.13.88.51.pfx
#            - /docker/fmsnas/images:/www/images
#            - /docker/fmsnas/10.13.88.51/logs:/www/logs
        expose:
            - 5000
        networks:
            wire3:
              ipv4_address: 192.168.80.6
#
    nginx:
        image: nginx:0.0.1
        build: ./nginx
        container_name: nginx
        restart: always
        depends_on:
            - flask
        ports:
            - "8080:8080"
        #        depends_on:
        #          - flask-api
        expose:
            - 8080
        networks:
            wire3:
                ipv4_address: 192.168.80.7


networks:
  wire3:
      driver: bridge
      ipam:
          config:
              - subnet: 192.168.80.0/24
